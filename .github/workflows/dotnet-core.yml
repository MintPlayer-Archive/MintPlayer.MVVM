name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: 3.1.301
        # Authenticates packages to push to GPR
        source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      env:
        NUGET_AUTH_TOKEN: '%NUGET_AUTH_TOKEN%'
    
    # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.1
    
    - name: Install dependencies
      #run: dotnet restore
      #env:
      #  NUGET_AUTH_TOKEN: ${{ github.token }}
      run: msbuild /t:restore
      env:
        NUGET_AUTH_TOKEN: ${{ github.token }}
    - name: Build
      #run: dotnet build --configuration Release --no-restore
      run: msbuild Library/MintPlayer.MVVM/MintPlayer.MVVM.csproj /p:Configuration=Release /p:RestorePackages=false
    #- name: Test
    #  run: dotnet test --no-restore --verbosity normal
    #- name: Pack
    #  #run: dotnet pack --no-build --configuration Release MintPlayer.MVVM/MintPlayer.MVVM.csproj --output .
    #  run: msbuild Library/MintPlayer.MVVM/MintPlayer.MVVM.csproj /t:Pack /p:configuration=Release /p:OutputPath=.
    - name: PushNuget
      run: dotnet nuget push Library/MintPlayer.MVVM/bin/Release/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.PUBLISH_TO_NUGET_ORG }} --skip-duplicate
    - name: PushGithub
      #run: dotnet nuget push *.nupkg --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --api-key ${{ github.token }} --no-symbols --skip-duplicate
      run: dotnet nuget push Library/MintPlayer.MVVM/bin/Release/*.nupkg --no-symbols --skip-duplicate
      env:
        NUGET_AUTH_TOKEN: ${{ github.token }}
